listen 80 default_server;

root /app;
index index.php index.html index.htm;

disable_symlinks off;

# Global restrictions configuration file.
# Designed to be included in any server {} block.
location = /favicon.ico {
  log_not_found off;
  access_log off;
}

location = /robots.txt {
  allow all;
  log_not_found off;
  access_log off;
}

# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
location ~ /\. {
  deny all;
}

# Deny access to any files with a .php extension in the uploads directory
# Works in sub-directory installs and also in multisite network
# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
location ~* /(?:uploads|files)/.*\.php${DOLLAR} {
  deny all;
}

# WordPress single site rules.
# Designed to be included in any server {} block.

# This order might seem weird - this is attempted to match last if rules below fail.
# http://wiki.nginx.org/HttpCoreModule
location / {
  try_files ${DOLLAR}uri ${DOLLAR}uri/ /index.php?${DOLLAR}args;
}

# Add trailing slash to */wp-admin requests.
rewrite /wp-admin${DOLLAR} ${DOLLAR}scheme://${DOLLAR}host${DOLLAR}uri/ permanent;

# Directives to send expires headers and turn off 404 error logging.
location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)${DOLLAR} {
       access_log off; log_not_found off; expires max;
}

# Pass all .php files onto a php-fpm/php-fcgi server.
location ~ [^/]\.php(/|${DOLLAR}) {
  fastcgi_split_path_info ^(.+?\.php)(/.*)${DOLLAR};
  if (!-f ${DOLLAR}document_root${DOLLAR}fastcgi_script_name) {
    return 404;
  }
  # This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

  fastcgi_param SCRIPT_FILENAME ${DOLLAR}document_root${DOLLAR}fastcgi_script_name;

  fastcgi_pass ${NGINX_PHP_ALIAS}:9000;
  fastcgi_index index.php;
  include $HENCE_APP_VOL_PREFIX/conf/fastcgi.conf;
  fastcgi_param HTTP_PROXY "";
  fastcgi_intercept_errors on;
  fastcgi_read_timeout ${NGINX_FASTCGI_READ_TIMEOUT};
  fastcgi_ignore_client_abort ${NGINX_FASTCGI_IGNORE_CLIENT_ABORT};
  client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
  client_body_buffer_size ${NGINX_CLIENT_BODY_BUFFER_SIZE};
}


