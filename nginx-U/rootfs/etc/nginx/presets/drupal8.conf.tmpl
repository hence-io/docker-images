listen 80 default_server;

root ${NGINX_APP_ROOT};

disable_symlinks off;

location = /favicon.ico {
    log_not_found off;
    access_log off;
}

location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
}

location /phpmyadmin {
  index index.php;
}

# Very rarely should these ever be accessed outside of your lan
location ~* \.(txt|log)${DOLLAR} {
    allow 192.168.0.0/16;
    deny all;
}

location ~ \..*/.*\.php${DOLLAR} {
    return 403;
}

location ~ ^/sites/.*/private/ {
    return 403;
}

# Block access to "hidden" files and directories whose names begin with a
# period. This includes directories used by version control systems such
# as Subversion or Git to store control files.
location ~ (^|/)\. {
    return 403;
}

location / {
    try_files ${DOLLAR}uri /index.php?${DOLLAR}query_string;
    #index  index.html index.htm index.php;
}

location @rewrite {
    rewrite ^/(.*)${DOLLAR} /index.php?q=${DOLLAR}1;
}

# In Drupal 8, we must also match new paths where the '.php' appears in the middle,
# such as update.php/selection. The rule we use is strict, and only allows this pattern
# with the update.php front controller.  This allows legacy path aliases in the form of
# blog/index.php/legacy-path to continue to route to Drupal nodes. If you do not have
# any paths like that, then you might prefer to use a laxer rule, such as:
#   location ~ \.php(/|${DOLLAR}) {
# The laxer rule will continue to work if Drupal uses this new URL pattern with front
# controllers other than update.php in a future release.
location ~ '\.php${DOLLAR}|^/update.php' {
    fastcgi_pass ${NGINX_PHP_ALIAS}:9000;

    fastcgi_split_path_info ^(.+?\.php)(|/.*)${DOLLAR};
    #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    include $HENCE_APP_VOL_PREFIX/conf/fastcgi.conf;
    fastcgi_param HTTP_PROXY "";
    fastcgi_intercept_errors on;
    fastcgi_read_timeout ${NGINX_FASTCGI_READ_TIMEOUT};
    fastcgi_ignore_client_abort ${NGINX_FASTCGI_IGNORE_CLIENT_ABORT};
    client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
    client_body_buffer_size ${NGINX_CLIENT_BODY_BUFFER_SIZE};
}

# Fighting with Styles? This little gem is amazing.
location ~ ^/sites/.*/files/styles/ {
    try_files ${DOLLAR}uri @rewrite;
}

location ~* \.(js|css|png|jpg|jpeg|gif|ico)${DOLLAR} {
    expires max;
    log_not_found off;
}
